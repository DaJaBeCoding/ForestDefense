plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

group 'maggdaforestdefense'
version 'app'

mainClassName = 'maggdaforestdefense.Main'
jar {
    manifest {
        attributes 'Main-Class': 'maggdaforestdefense.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'maggdaforestdefense.Main'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

applicationDefaultJvmArgs = ["-Djava.library.path=natives"]

sourceCompatibility = 1.8

compileJava.options.encoding = 'ISO-8859-1'

repositories {
    mavenCentral()
    maven {
        url "https://repo.panda-lang.org/"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.oauth-client:google-oauth-client:1.30.6'
    implementation 'de.codecentric.centerdevice:javafxsvg:1.3.0'
    //implementation 'org.panda-lang:pandomium:67.0.6'
    compile "org.java-websocket:Java-WebSocket:1.5.1"
    //compile 'com.jfoenix:jfoenix:8.0.8' // For Java 8
    //compile 'com.jfoenix:jfoenix:9.0.8' // For Java 9
    runtimeOnly "org.openjfx:javafx-graphics:15.0.1:win"
    runtimeOnly "org.openjfx:javafx-graphics:15.0.1:linux"
    runtimeOnly "org.openjfx:javafx-graphics:15.0.1:mac"
}

javafx {
    version = "15.0.1"
    modules = [ 'javafx.base' , 'javafx.controls' , 'javafx.fxml' , 'javafx.graphics' , 'javafx.media' , 'javafx.swing' , 'javafx.web' ]
}
